{
  "createdAt": "2025-06-06T14:21:49.723Z",
  "updatedAt": "2025-06-06T14:21:55.000Z",
  "id": "66ui634XiScS6ESW",
  "name": "Support Zammad__AI_posts_with_suggested_actions_on_tickets",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        120,
        920
      ],
      "id": "8155de77-891f-42a3-a55d-015cbc3f9026",
      "name": "When clicking â€˜Test workflowâ€™"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "691e28cd-6fdc-49a6-8b0a-7d5c523915e2",
              "name": "ticket_id",
              "value": 11953,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2180,
        1760
      ],
      "id": "62efa0e0-3bc4-4847-9079-03af454b5437",
      "name": "Settings"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n-support.zammad.com/api/v1/ticket_articles",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "ticket_id",
              "value": "={{ $('Webhook').item.json.body.ticket.id }}"
            },
            {
              "name": "body",
              "value": "={{ $json.output }}"
            },
            {
              "name": "type",
              "value": "note"
            },
            {
              "name": "internal",
              "value": "true"
            },
            {
              "name": "content_type",
              "value": "text/html"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2640,
        360
      ],
      "id": "d273ff91-cf46-4dd2-88ad-75dc98a9312a",
      "name": "Post draft reply"
    },
    {
      "parameters": {
        "resource": "ticket",
        "operation": "getAll"
      },
      "type": "n8n-nodes-base.zammad",
      "typeVersion": 1,
      "position": [
        2400,
        1760
      ],
      "id": "b97917c8-3ef3-40a1-82a3-8c1de409ab02",
      "name": "Zammad"
    },
    {
      "parameters": {
        "content": "Knowledge sources\n- Forum\n- Docs\n- Support KB\n- Snippets\n\nRecent PRs that got shipped that are relevant to something the customer is complaining about\n\nDownload the contents of screenshots\n",
        "height": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2700,
        1620
      ],
      "typeVersion": 1,
      "id": "df145d02-14a2-48b5-86bd-150a7f0a9c96",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        2840,
        1360
      ],
      "id": "24034ea0-1eb1-4ff7-9967-c7552d5f504a",
      "name": "When chat message received",
      "webhookId": "dfd4ea5f-9dd3-4f16-b976-a3b2556a4038"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {
          "temperature": 0.1,
          "topP": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3060,
        1700
      ],
      "id": "967f0cb4-fab2-4371-9736-4512261eae6e",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "sfasdfdssx"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.2,
      "position": [
        3200,
        1700
      ],
      "id": "9899c098-62e9-428a-a41b-cdd325a1aeab",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a helpful assistant specializing in n8n. \n\nRespond to the user's question using the knowledge available to you through your tools.\n\nIf you use data from the Support knowledge base, include the names and URLs of any documents at the end of your response."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        3240,
        1360
      ],
      "id": "49223587-534b-4adf-9ad5-2de9e91097eb",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "name": "n8n_forum",
        "description": "Provides access to community problems and solutions from the official n8n forum. Use this tool if the answer is not found in the documentation",
        "workflowId": {
          "__rl": true,
          "value": "nsEnI4RPgdu50rLx",
          "mode": "list",
          "cachedResultName": "ðŸ§° Forum tool"
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n\"type\": \"object\",\n\"properties\": {\n\t\"query\": {\n\t\t\"type\": \"string\",\n\t\t\"description\": \"Query string used to search the forum vector database\"\n\t\t}\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        3520,
        1700
      ],
      "id": "2b59f9f7-85d0-4862-8a02-9b0436e387ff",
      "name": "ðŸ§° Forum"
    },
    {
      "parameters": {
        "name": "n8n_documentation",
        "description": "Has access to the official n8n documentation. Always use this tool to answer all n8n-related questions",
        "workflowId": {
          "__rl": true,
          "value": "hVtasXewB2Q0at3W",
          "mode": "list",
          "cachedResultName": "ðŸ§° Documentation tool"
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n\"type\": \"object\",\n\"properties\": {\n\t\"query\": {\n\t\t\"type\": \"string\",\n\t\t\"description\": \"Query string used to search n8n documentation vector database\"\n\t\t}\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        3360,
        1700
      ],
      "id": "a5d34b87-dbd9-46ab-b1e0-66bc044da32d",
      "name": "ðŸ§° Documentation"
    },
    {
      "parameters": {
        "content": "## These are pointing to staging right now",
        "height": 220,
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3320,
        1600
      ],
      "typeVersion": 1,
      "id": "0cbcd0ab-b281-42c4-8c40-09061e7523d9",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "chunkSize": 500
      },
      "id": "41b2f032-b68d-4c2a-b217-adcd9a462627",
      "name": "Token Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "position": [
        1540,
        2260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9584635e-de7b-457a-b8b2-f1a4a6957f08",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        300,
        1620
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 1
            }
          ]
        }
      },
      "id": "6bed2acd-4149-43a9-b769-4884204853bf",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        80,
        1400
      ],
      "typeVersion": 1.2,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "support_kb",
        "filterType": "string",
        "filterString": "=metadata->>id=eq.{{ $('Input Reference').item.json.id }}"
      },
      "id": "5e68ecd5-1b0a-4ec9-b265-0569f093a718",
      "name": "Delete old embeddings if exist",
      "type": "n8n-nodes-base.supabase",
      "position": [
        520,
        1760
      ],
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "resource": "block",
        "operation": "getAll",
        "blockId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Input Reference').item.json.id }}"
        },
        "returnAll": true,
        "fetchNestedBlocks": true,
        "simplifyOutput": false
      },
      "id": "d79c61d3-e8e8-482c-b3f2-cc2ff42e61c0",
      "name": "Get page blocks",
      "type": "n8n-nodes-base.notion",
      "position": [
        760,
        1760
      ],
      "executeOnce": true,
      "typeVersion": 2.2,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "cabb35a2-05e0-431d-ae20-44d309bc5e72",
          "mode": "list",
          "cachedResultName": "Support Knowledge Base",
          "cachedResultUrl": "https://www.notion.so/cabb35a205e0431dae2044d309bc5e72"
        },
        "returnAll": true,
        "filterType": "manual",
        "filters": {
          "conditions": [
            {
              "key": "Updated|last_edited_time",
              "condition": "after",
              "lastEditedTime": "={{ $now.minus(1, 'day') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6a7e0f34-8f19-4d29-89c3-4a18fad7a8e6",
      "name": "Get updated pages",
      "type": "n8n-nodes-base.notion",
      "position": [
        300,
        1400
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "support_kb",
          "mode": "list",
          "cachedResultName": "support_kb"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "4a4ad8a8-5a45-43b7-b6e8-031bb6793a75",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "position": [
        1440,
        1760
      ],
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "Store additional meta data with each embed, especially the Notion ID, which can be later used to find all belonging entries of one page, even if they got split into multiple embeds.",
        "height": 275.841854198618,
        "width": 376.0759088111347,
        "color": 7
      },
      "id": "3f5aa535-58ce-4acc-ad0b-71e6fbd8569f",
      "name": "Sticky Note29",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1400,
        1960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "markdown",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "6d25b1b7-6f40-4e3d-8d30-f09a03164918",
      "name": "Concatenate to single string",
      "type": "n8n-nodes-base.summarize",
      "position": [
        1220,
        1760
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "924aa04a-459f-472b-8996-0d9eba3b211f",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        1300,
        2240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "id",
                "value": "={{ $('Loop Over Items').item.json.id }}"
              },
              {
                "name": "name",
                "value": "={{ $('Loop Over Items').item.json.name }}"
              },
              {
                "name": "url",
                "value": "={{ $('Loop Over Items').item.json.url }}"
              },
              {
                "name": "created",
                "value": "={{ $('Loop Over Items').item.json.property_created }}"
              },
              {
                "name": "created_by",
                "value": "={{ $('Loop Over Items').item.json.property_created_by }}"
              }
            ]
          }
        }
      },
      "id": "b63e3355-9a39-4162-b7de-0079632e23bb",
      "name": "Default Data Loader1",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        1460,
        2080
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "9fac9c9d-6c54-4d2b-8d30-1c362c7f83b9",
      "name": "Input Reference",
      "type": "n8n-nodes-base.noOp",
      "position": [
        520,
        1400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const allow_embedded_images = false;\n\nfunction extractMarkdown(obj) {\n  console.log('Extracting')\n  console.log(obj)\n  if(!obj?.text && obj?.url) {\n    // We have a link_preview\n    return '[link]('+obj.url+')';\n  }\n\n  // Unsupported type with no text\n  if(!obj?.text) return;\n  \n  console.log('obj extracting: ', obj?.text) \n  out = obj?.text.reduce((s, o) => {\n    if(!o) {\n      return \"\"\n    }\n    if(o.text?.link) {\n      return s + '[' + o.text.content + '](' + o.text.link?.url + ')'\n    }\n    out = (o.text?.content || o.plain_text)\n    if(o.annotations?.bold) {\n      out = '**' + out.trim() + '**'\n    }\n    if(o.annotations?.italic) {\n      out = '_' + out.trim() + '_'\n    }\n    return s + out\n  }, \"\") || \"\"\n\n  return out.replace('\\n', '  ') // Line breaks converted to double spaces\n}\n\n\nconst indent = \"    \"; // Four spaces\nlet parent_ids = [$input.all()[0].json.root_id]\n\nfor(item of $input.all()){\n\n  // Generate the markdown\n  console.log('id', item.json.id)\n  \n  if(item.json.type) {\n  \n    const type = item.json.type\n    console.log('type', type)\n    \n    if(type == 'bulleted_list_item' || type == 'toggle') {\n      item.json.markdown = '* ' + extractMarkdown(item.json[type])\n    } else if(type == 'numbered_list_item') {\n      item.json.markdown = '1. ' + extractMarkdown(item.json[type])\n    } else if(type == 'to_do') {\n      item.json.markdown = '+ [ ] ' + extractMarkdown(item.json[type])\n    } else if(type.startsWith('heading_')) {\n      item.json.markdown = '#'.repeat(type.split('_')[1]) + ' ' + extractMarkdown(item.json[type])\n    } else if(type == 'image') {\n      let url = item.json.image[item.json.image.type].url;\n      console.log('image', url.slice(0, 10))\n      if(url.startsWith('data:') && !allow_embedded_images) {\n        item.json.markdown = '[inline image]'\n      } else {\n        item.json.markdown = '![image]('+url+')'\n      }\n    } else if(type == 'video') {\n      item.json.markdown = '[ðŸŽ¬ Video]('+$input.all()[0].json.page_url + '?pvs=4#' + item.json.id.replaceAll('-', '') +')'\n    } else if(type == 'divider') {\n      item.json.markdown = '---'\n    } else if(type == 'table') {\n      item.json.markdown = '_Table (content missing)_'\n    } else if(type == 'table_row') {\n      item.json.markdown = ''\n    } else if(type == 'table_of_contents') {\n      item.json.markdown = ''\n    } else if(type == 'synced_block') {\n      item.json.markdown = ''\n    } else if(type == 'child_database') {\n      item.json.markdown = ''\n    } else if(type == 'column_list') {\n      item.json.markdown = ''\n    } else if(type == 'column') {\n      item.json.markdown = ''\n    } else if(type == 'page_id') {\n      item.json.markdown = ''\n    } else if(type == 'link_to_page') {\n      item.json.markdown = ''\n    } else {\n      item.json.markdown = extractMarkdown(item.json[type])\n    }\n  \n    // Figure out how much to indent it\n    // If parent ID is in list, remove everything after that ID\n    // If parent ID is not in list, add it\n    // If parent is the same, do nothing\n    const parent_id_index = parent_ids.indexOf(item.json.parent_id);\n  \n    // Check if the value is found\n    if (parent_id_index !== -1) {\n      // Remove all elements after the first occurrence\n      parent_ids.splice(parent_id_index + 1);\n    } else {\n      parent_ids.push(item.json.parent_id)\n    }\n  \n    // Indent the markdown\n    //if (type != \"image\") {\n      item.json.markdown = indent.repeat(parent_ids.length - 2) + item.json.markdown.trimEnd()\n    //}\n  }\n}\n\n// On returning, add in the root block content at the beginning\nreturn [\n  ...[\n    {\n      \"json\": {\n        \"markdown\":\nextractMarkdown($input.all()[0].json.root_content)\n      },\n      \"pairedItem\": 0\n    }\n  ],\n  ...$input.all()\n]"
      },
      "id": "ebe7d4f1-8fd6-44cb-b7c4-4621b7bc3e47",
      "name": "Convert contents to Markdown",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        980,
        1760
      ]
    },
    {
      "parameters": {
        "maxItems": 10,
        "keep": "lastItems"
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        740,
        1400
      ],
      "id": "719116a0-f647-4375-9c6a-7fe48df4b4b7",
      "name": "Limit"
    },
    {
      "parameters": {
        "content": "# Populate Support Knowledge Base vector store",
        "height": 1180,
        "width": 1860,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        1300
      ],
      "typeVersion": 1,
      "id": "7357cefa-c84f-4a8a-8f2a-d388bcac8d70",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Todo\n\nExclude n8n emails\n\nDoesn't follow synced blocks: https://www.notion.so/SLA-adherence-notifications-1195b6e0c94f802dbe49cb70966b347b\nOr child databases, column lists or columns\n"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -200,
        760
      ],
      "typeVersion": 1,
      "id": "a179e0f4-11ec-48f9-98a1-e98d62686f16",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "support_knowledge_base",
        "toolDescription": "Retrieve documents from the Support knowledge base",
        "tableName": {
          "__rl": true,
          "value": "support_kb",
          "mode": "list",
          "cachedResultName": "support_kb"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        3700,
        1700
      ],
      "id": "7c343fe9-1bc6-4321-8118-c44bf15eafe6",
      "name": "Support knowledge base"
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "31a1a29e-465f-4c34-9dca-7c466fe65f2c",
      "name": "Embeddings OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        3820,
        1880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Support requests doc\nhttps://docs.google.com/spreadsheets/d/1eKJ_mSYSn1i6hr4k_kVHzXxv6TAIgM1pGCwyc4ycXKM/edit?gid=0#gid=0"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2120,
        1500
      ],
      "typeVersion": 1,
      "id": "292a4ba7-d803-4112-81ca-509c5b7e03ea",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1eKJ_mSYSn1i6hr4k_kVHzXxv6TAIgM1pGCwyc4ycXKM",
          "mode": "list",
          "cachedResultName": "Support requests sample",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1eKJ_mSYSn1i6hr4k_kVHzXxv6TAIgM1pGCwyc4ycXKM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1eKJ_mSYSn1i6hr4k_kVHzXxv6TAIgM1pGCwyc4ycXKM/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        360,
        920
      ],
      "id": "b35d810f-b794-45a6-a4a6-6ca52cae4b21",
      "name": "Read sample tickets"
    },
    {
      "parameters": {
        "inputText": "={{ $json.inital_message }}",
        "categories": {
          "categories": [
            {
              "category": "instance unavailable",
              "description": "Instance is offline, not reachable (403) or instance crashes"
            },
            {
              "category": "other",
              "description": "Everything else"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        2180,
        1960
      ],
      "id": "8f33470c-8a29-49c0-87d6-3bd28597ccd9",
      "name": "Text Classifier",
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        780,
        760
      ],
      "id": "2539a004-3886-4a8e-aef7-5d399c7a73b1",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "support_knowledge_base",
        "toolDescription": "Retrieve documents from the Support knowledge base",
        "tableName": {
          "__rl": true,
          "value": "support_kb",
          "mode": "list",
          "cachedResultName": "support_kb"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        1020,
        740
      ],
      "id": "93107f52-8fd6-42bc-85b0-646bc298f621",
      "name": "Support knowledge base1"
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "f8a9e40f-8ddb-4547-bebf-6bf03ee36a26",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        1140,
        920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"info_in_kb\": true\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1340,
        760
      ],
      "id": "25c74263-d0bf-48bc-895d-82095346c586",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e676b545-1495-427e-ae6e-c9fe147e088d",
              "leftValue": "={{ $json.output.info_in_kb }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1280,
        540
      ],
      "id": "7705d7ea-39f9-4c91-bae2-62bb9ddbf10d",
      "name": "Relevant info in KB?"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1820,
        760
      ],
      "id": "2d7c6e13-a438-4a01-94c9-f5cd3f2bc675",
      "name": "OpenAI Chat Model2"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "support_knowledge_base",
        "toolDescription": "Retrieve documents from the Support knowledge base",
        "tableName": {
          "__rl": true,
          "value": "support_kb",
          "mode": "list",
          "cachedResultName": "support_kb"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2060,
        740
      ],
      "id": "1f7a1872-e74c-4737-8786-0996f271fa77",
      "name": "Support knowledge base2"
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "07fb5446-1ed4-4197-90dc-e82690914c22",
      "name": "Embeddings OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        2180,
        920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=USER ISSUE:\n\n{{ $json.message }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a helpful assistant designed to make n8n support agents' lives easier.\n\nYour task is to look at the issue from the user and decide whether there is information in the support knowledge base that will help the support agent investigate or answer the issue."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        960,
        540
      ],
      "id": "0bcf2bb2-e702-413c-a0a1-6a4031f6fbdc",
      "name": "Triage"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=USER ISSUE:\n\n{{ $('Set message').item.json.message }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a helpful assistant designed to make n8n support agents' lives easier.\n\nYour task is to help the support agent answer the user issue below. Produce guidance for the support agent, addressed to them (not the user). \n\nMake sure you include the URL of any information you use from the support knowledge base.\n\nIf the next step is clear, you can include a draft message for the user.\n\nFormat the your response as an HTML fragment, NOT as Markdown. Do not wrap your HTML fragment in backticks."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1860,
        540
      ],
      "id": "c9afc625-63b1-4c5d-a414-c34144f5de3f",
      "name": "Generate guidance"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1eKJ_mSYSn1i6hr4k_kVHzXxv6TAIgM1pGCwyc4ycXKM",
          "mode": "list",
          "cachedResultName": "Support requests sample",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1eKJ_mSYSn1i6hr4k_kVHzXxv6TAIgM1pGCwyc4ycXKM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1eKJ_mSYSn1i6hr4k_kVHzXxv6TAIgM1pGCwyc4ycXKM/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_number": "={{ $('Read sample tickets').item.json.row_number }}",
            "gen_response": "={{ $json.output }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "inital_message",
              "displayName": "inital_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "actual_response",
              "displayName": "actual_response",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "gen_response",
              "displayName": "gen_response",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2660,
        920
      ],
      "id": "c422a0ca-dc7a-43ed-a5c7-f08cc4f8a19a",
      "name": "Add response back to sheet"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        580,
        920
      ],
      "id": "f281a965-691b-4774-9c0a-cb562d64c924",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "de7a1a47-cd0c-440d-b73b-bee6f009ef28",
              "name": "output",
              "value": "=<i><a href=\"https://internal.users.n8n.cloud/workflow/8agI7XqJjfRJMmvI\">AI-generated</a> suggestion. Add an 'ai_post_helpful' or 'ai_post_unhelpful' tag to help us improve these suggestions.<i><br />\n<br />\n{{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2220,
        540
      ],
      "id": "76630e7b-d5e4-461f-9853-69c77108de59",
      "name": "Add AI tag header"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "d562586c-af6d-487f-9157-984daa4bf370",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        600,
        340
      ],
      "id": "b37bc658-e0ab-441b-a5fb-b0e33fb20f86",
      "name": "Webhook",
      "webhookId": "d562586c-af6d-487f-9157-984daa4bf370"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc172eea-112c-45a9-9632-3a01e681f9e3",
              "leftValue": "={{ $('Webhook').isExecuted }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2440,
        540
      ],
      "id": "52198469-1727-4537-9933-fea247ce8c48",
      "name": "Came from webhook?"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://support.n8n.io/api/v1/tags/add",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"item\": \"ai_post\",\n    \"object\": \"Ticket\",\n    \"o_id\": {{ $('Webhook').item.json.body.ticket.id }}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2860,
        360
      ],
      "id": "64310ff0-6452-4b29-82c1-ed4251e88be3",
      "name": "Add ai_post tag"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5093c9e6-4620-44a0-9110-4a6abc24847d",
              "name": "message",
              "value": "={{ $json.body.article.body || $json.inital_message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        820,
        540
      ],
      "id": "1318bf6e-29a0-433a-8e49-1f85ceb2aefb",
      "name": "Set message"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1560,
        920
      ],
      "id": "f9a2cc29-c295-48be-83e9-ad9449d5d13f",
      "name": "Loop back to next item"
    },
    {
      "parameters": {
        "content": "# Misc stuff",
        "height": 1020,
        "width": 1940,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2080,
        1300
      ],
      "typeVersion": 1,
      "id": "41f750a8-a28b-42db-9f0f-d01b68a1e86a",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Here is a new tesxt",
        "height": 1180,
        "width": 3160,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "f698edb3-28cc-4757-94e4-6d8bbb7e37bd",
      "name": "Sticky Note5"
    }
  ],
  "connections": {
    "When clicking â€˜Test workflowâ€™": {
      "main": [
        [
          {
            "node": "Read sample tickets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Settings": {
      "main": [
        [
          {
            "node": "Zammad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "ðŸ§° Documentation": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ðŸ§° Forum": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Delete old embeddings if exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get updated pages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete old embeddings if exist": {
      "main": [
        [
          {
            "node": "Get page blocks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get page blocks": {
      "main": [
        [
          {
            "node": "Convert contents to Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get updated pages": {
      "main": [
        [
          {
            "node": "Input Reference",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Concatenate to single string": {
      "main": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Input Reference": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert contents to Markdown": {
      "main": [
        [
          {
            "node": "Concatenate to single string",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Support knowledge base": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Support knowledge base",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Read sample tickets": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Triage",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Support knowledge base1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Support knowledge base1": {
      "ai_tool": [
        [
          {
            "node": "Triage",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Triage",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Generate guidance",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Support knowledge base2": {
      "ai_tool": [
        [
          {
            "node": "Generate guidance",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI3": {
      "ai_embedding": [
        [
          {
            "node": "Support knowledge base2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Relevant info in KB?": {
      "main": [
        [
          {
            "node": "Generate guidance",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop back to next item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Triage": {
      "main": [
        [
          {
            "node": "Relevant info in KB?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate guidance": {
      "main": [
        [
          {
            "node": "Add AI tag header",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Set message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add response back to sheet": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add AI tag header": {
      "main": [
        [
          {
            "node": "Came from webhook?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Set message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Came from webhook?": {
      "main": [
        [
          {
            "node": "Post draft reply",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add response back to sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post draft reply": {
      "main": [
        [
          {
            "node": "Add ai_post tag",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set message": {
      "main": [
        [
          {
            "node": "Triage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop back to next item": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "internal.users.n8n.cloud",
            "user-agent": "Zammad User Agent",
            "content-length": "9858",
            "accept": "*/*",
            "accept-encoding": "gzip;q=1.0,deflate;q=0.6,identity;q=0.3",
            "content-type": "application/json; charset=utf-8",
            "x-forwarded-for": "10.255.0.2",
            "x-forwarded-host": "internal.users.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "e26e9d2ccfa3",
            "x-real-ip": "10.255.0.2",
            "x-zammad-delivery": "bbee1f46-c0f4-4b95-9953-28d37d897d83",
            "x-zammad-trigger": "Call David's webhook"
          },
          "params": {},
          "query": {},
          "body": {
            "ticket": {
              "article_count": 2,
              "article_ids": [
                75237,
                75236
              ],
              "case_identifier": "",
              "category": "",
              "checklist_id": null,
              "close_at": null,
              "close_diff_in_min": null,
              "close_escalation_at": null,
              "close_in_min": null,
              "create_article_sender": "Agent",
              "create_article_sender_id": 1,
              "create_article_type": "email",
              "create_article_type_id": 1,
              "created_at": "2025-02-25T09:59:22.938Z",
              "created_by": {
                "active": true,
                "address": "",
                "city": "",
                "country": "",
                "created_at": "2024-12-02T10:01:24.490Z",
                "created_by": "jonathan@n8n.io",
                "created_by_id": 9,
                "department": "",
                "email": "gualter@n8n.io",
                "fax": "",
                "firstname": "Gualter",
                "id": 6789,
                "image": "fc431c0ecd3d4a038ec7fc26c5052f5b",
                "image_source": null,
                "lastname": "Augusto",
                "login": "gualter@n8n.io",
                "mobile": "",
                "note": "",
                "organization": "n8n",
                "organization_id": 2,
                "organization_ids": [],
                "organizations": [],
                "out_of_office": false,
                "out_of_office_end_at": null,
                "out_of_office_replacement_id": null,
                "out_of_office_start_at": null,
                "overview_sorting_ids": [
                  20,
                  21,
                  22,
                  23,
                  24,
                  25,
                  26,
                  27,
                  28,
                  29
                ],
                "phone": "",
                "role_ids": [
                  6,
                  2,
                  1
                ],
                "roles": [
                  "Supportlings",
                  "Agent",
                  "Admin"
                ],
                "source": null,
                "street": "",
                "supportcontract": "none",
                "two_factor_preference_ids": [
                  34,
                  33
                ],
                "updated_at": "2025-02-18T15:38:48.399Z",
                "updated_by": "gualter@n8n.io",
                "updated_by_id": 6789,
                "verified": true,
                "vip": false,
                "web": "",
                "zip": ""
              },
              "created_by_id": 6789,
              "customer": {
                "active": true,
                "address": null,
                "city": "",
                "country": "",
                "created_at": "2025-01-27T09:24:21.898Z",
                "created_by": "gualterandre@gmail.com",
                "created_by_id": 7903,
                "department": null,
                "email": "gualterandre@gmail.com",
                "fax": "",
                "firstname": "Gualter",
                "id": 7903,
                "image": "d7838f4a7eecc5b6ed70f2dc2d2cee1a",
                "image_source": null,
                "lastname": "",
                "login": "gualterandre@gmail.com",
                "mobile": "",
                "note": "",
                "organization_id": null,
                "organization_ids": [],
                "organizations": [],
                "out_of_office": false,
                "out_of_office_end_at": null,
                "out_of_office_replacement_id": null,
                "out_of_office_start_at": null,
                "overview_sorting_ids": [],
                "overview_sortings": [],
                "phone": "",
                "role_ids": [
                  3
                ],
                "roles": [
                  "Customer"
                ],
                "source": null,
                "street": "",
                "supportcontract": "none",
                "two_factor_preference_ids": [],
                "two_factor_preferences": [],
                "updated_at": "2025-02-25T09:59:25.987Z",
                "updated_by": "gualter@n8n.io",
                "updated_by_id": 6789,
                "verified": true,
                "vip": false,
                "web": "",
                "zip": ""
              },
              "customer_id": 7903,
              "customer_ticket_state": "in-progress",
              "escalation_at": "2025-03-07T09:59:23.000Z",
              "first_response_at": "2025-02-25T09:59:22.998Z",
              "first_response_diff_in_min": 1440,
              "first_response_escalation_at": null,
              "first_response_in_min": 0,
              "group": {
                "active": true,
                "assignment_timeout": null,
                "created_at": "2022-07-05T14:57:29.898Z",
                "created_by": "tom@n8n.io",
                "created_by_id": 3,
                "email_address": "n8n Support",
                "email_address_id": 1,
                "follow_up_assignment": true,
                "follow_up_possible": "new_ticket_after_certain_time",
                "id": 2,
                "name": "Support",
                "name_last": "Support",
                "note": "Standard group for support requests",
                "parent_id": null,
                "reopen_time_in_days": 14,
                "shared_drafts": true,
                "signature": "Support (2025)",
                "signature_id": 4,
                "updated_at": "2025-02-24T09:19:39.721Z",
                "updated_by": "aya@n8n.io",
                "updated_by_id": 3964,
                "user_ids": [
                  11,
                  35,
                  8,
                  4814,
                  9,
                  757
                ],
                "users": [
                  "marcus@n8n.io",
                  "accounts@n8n.io",
                  "thomas@thomasmartens.eu",
                  "medic@n8n.io",
                  "jonathan@n8n.io",
                  "niklas@n8n.io"
                ]
              },
              "group_id": 2,
              "id": 12507,
              "last_assigned_at": null,
              "last_close_at": null,
              "last_contact_agent_at": "2025-02-25T09:59:22.998Z",
              "last_contact_at": "2025-02-25T09:59:22.998Z",
              "last_contact_customer_at": null,
              "last_owner_update_at": "2025-02-25T09:59:23.016Z",
              "linear": "",
              "note": null,
              "number": "7612501",
              "organization_id": null,
              "owner": {
                "active": false,
                "address": "",
                "city": "",
                "country": "",
                "created_at": "2022-06-20T06:50:43.595Z",
                "created_by": "-",
                "created_by_id": 1,
                "department": "",
                "email": "",
                "fax": "",
                "firstname": "-",
                "id": 1,
                "image": null,
                "image_source": null,
                "lastname": "",
                "login": "-",
                "mobile": "",
                "note": "",
                "organization_id": null,
                "organization_ids": [],
                "organizations": [],
                "out_of_office": false,
                "out_of_office_end_at": null,
                "out_of_office_replacement_id": null,
                "out_of_office_start_at": null,
                "overview_sorting_ids": [],
                "overview_sortings": [],
                "phone": "",
                "role_ids": [],
                "roles": [],
                "source": null,
                "street": "",
                "supportcontract": null,
                "two_factor_preference_ids": [],
                "two_factor_preferences": [],
                "updated_at": "2022-06-20T06:50:43.595Z",
                "updated_by": "-",
                "updated_by_id": 1,
                "verified": false,
                "vip": false,
                "web": "",
                "zip": ""
              },
              "owner_id": 1,
              "pending_time": null,
              "preferences": {
                "escalation_calculation": {
                  "first_response_at": "2025-02-25T09:59:22.998Z",
                  "last_update_at": "2025-02-25T09:59:22.998Z",
                  "last_contact_at": "2025-02-25T09:59:22.998Z",
                  "sla_id": 6,
                  "sla_updated_at": "2025-02-20T12:07:31.748Z",
                  "calendar_id": 1,
                  "calendar_updated_at": "2025-02-24T14:53:45.621Z",
                  "escalation_disabled": false
                }
              },
              "priority": {
                "active": true,
                "created_at": "2022-06-20T06:50:44.658Z",
                "created_by": "-",
                "created_by_id": 1,
                "default_create": true,
                "id": 2,
                "name": "2 normal",
                "note": null,
                "ui_color": null,
                "ui_icon": null,
                "updated_at": "2022-06-20T06:50:44.658Z",
                "updated_by": "-",
                "updated_by_id": 1
              },
              "priority_id": 2,
              "referencing_checklist_ids": [],
              "referencing_checklists": [],
              "requested_priority": "medium",
              "state": "open",
              "state_id": 2,
              "ticket_time_accounting": [],
              "ticket_time_accounting_ids": [],
              "time_unit": null,
              "title": "testing ticket",
              "type": null,
              "update_diff_in_min": 2400,
              "update_escalation_at": "2025-03-07T09:59:23.000Z",
              "update_in_min": 0,
              "updated_at": "2025-02-25T09:59:27.205Z",
              "updated_by": {
                "active": false,
                "address": "",
                "city": "",
                "country": "",
                "created_at": "2022-06-20T06:50:43.595Z",
                "created_by": "-",
                "created_by_id": 1,
                "department": "",
                "email": "",
                "fax": "",
                "firstname": "-",
                "id": 1,
                "image": null,
                "image_source": null,
                "lastname": "",
                "login": "-",
                "mobile": "",
                "note": "",
                "organization_id": null,
                "organization_ids": [],
                "organizations": [],
                "out_of_office": false,
                "out_of_office_end_at": null,
                "out_of_office_replacement_id": null,
                "out_of_office_start_at": null,
                "overview_sorting_ids": [],
                "overview_sortings": [],
                "phone": "",
                "role_ids": [],
                "roles": [],
                "source": null,
                "street": "",
                "supportcontract": null,
                "two_factor_preference_ids": [],
                "two_factor_preferences": [],
                "updated_at": "2022-06-20T06:50:43.595Z",
                "updated_by": "-",
                "updated_by_id": 1,
                "verified": false,
                "vip": false,
                "web": "",
                "zip": ""
              },
              "updated_by_id": 1,
              "organization": {}
            },
            "article": {
              "attachments": [
                {
                  "id": 182625,
                  "store_file_id": 30,
                  "filename": "image1.png",
                  "size": "3380",
                  "preferences": {
                    "Content-Type": "image/png",
                    "Mime-Type": "image/png",
                    "Content-ID": "12507.d254fa4a-5daa-4195-9606-08f4f6c26dcb@support.n8n.io",
                    "Content-Disposition": "inline"
                  },
                  "url": "https://support.n8n.io/api/v1/ticket_attachment/12507/75236/182625"
                }
              ],
              "body": "hi team<div><br></div><div>I need help setting up an AI bot, can you help me please?<br><br><div data-signature=\"true\" data-signature-id=\"4\">--<br><div>\n<div>\n<b><div>\n<div style=\"color:rgb(32, 33, 36);\"><b><img src=\"/api/v1/ticket_attachment/12507/75236/182625?view=inline\" style=\"max-width:100%;width:96px;max-height:25px;\"><br></b></div>\n<b></b>\n</div></b><b>Gualter</b>\n</div>\n<div>\n<div>n8n Support</div>\n</div>\n</div>\n</div>\n</div>",
              "cc": "",
              "content_type": "text/html",
              "created_at": "2025-02-25T09:59:22.998Z",
              "created_by": {
                "active": true,
                "address": "",
                "city": "",
                "country": "",
                "created_at": "2024-12-02T10:01:24.490Z",
                "created_by": "jonathan@n8n.io",
                "created_by_id": 9,
                "department": "",
                "email": "gualter@n8n.io",
                "fax": "",
                "firstname": "Gualter",
                "id": 6789,
                "image": "fc431c0ecd3d4a038ec7fc26c5052f5b",
                "image_source": null,
                "lastname": "Augusto",
                "login": "gualter@n8n.io",
                "mobile": "",
                "note": "",
                "organization": "n8n",
                "organization_id": 2,
                "organization_ids": [],
                "organizations": [],
                "out_of_office": false,
                "out_of_office_end_at": null,
                "out_of_office_replacement_id": null,
                "out_of_office_start_at": null,
                "overview_sorting_ids": [
                  20,
                  21,
                  22,
                  23,
                  24,
                  25,
                  26,
                  27,
                  28,
                  29
                ],
                "phone": "",
                "role_ids": [
                  6,
                  2,
                  1
                ],
                "roles": [
                  "Supportlings",
                  "Agent",
                  "Admin"
                ],
                "source": null,
                "street": "",
                "supportcontract": "none",
                "two_factor_preference_ids": [
                  34,
                  33
                ],
                "updated_at": "2025-02-18T15:38:48.399Z",
                "updated_by": "gualter@n8n.io",
                "updated_by_id": 6789,
                "verified": true,
                "vip": false,
                "web": "",
                "zip": ""
              },
              "created_by_id": 6789,
              "from": "Gualter Augusto via n8n Support <help@n8n.io>",
              "id": 75236,
              "in_reply_to": null,
              "internal": false,
              "message_id": "<20250225095923.12507.1a5433b2-08b3-40c8-946d-81fe47c42e09@support.n8n.io>",
              "message_id_md5": "a9db399e65ea5453c39d2fc5e8e73771",
              "origin_by_id": null,
              "preferences": {
                "email_address_id": 1,
                "delivery_retry": 1,
                "delivery_channel_id": 3,
                "delivery_status_message": null,
                "delivery_status": "success",
                "delivery_status_date": "2025-02-25T09:59:24.910Z"
              },
              "reply_to": null,
              "sender": "Agent",
              "sender_id": 1,
              "subject": "testing ticket",
              "ticket_id": 12507,
              "time_unit": null,
              "to": "Gualter <gualterandre@gmail.com>",
              "type": "email",
              "type_id": 1,
              "updated_at": "2025-02-25T09:59:24.911Z",
              "updated_by": {
                "active": true,
                "address": "",
                "city": "",
                "country": "",
                "created_at": "2024-12-02T10:01:24.490Z",
                "created_by": "jonathan@n8n.io",
                "created_by_id": 9,
                "department": "",
                "email": "gualter@n8n.io",
                "fax": "",
                "firstname": "Gualter",
                "id": 6789,
                "image": "fc431c0ecd3d4a038ec7fc26c5052f5b",
                "image_source": null,
                "lastname": "Augusto",
                "login": "gualter@n8n.io",
                "mobile": "",
                "note": "",
                "organization": "n8n",
                "organization_id": 2,
                "organization_ids": [],
                "organizations": [],
                "out_of_office": false,
                "out_of_office_end_at": null,
                "out_of_office_replacement_id": null,
                "out_of_office_start_at": null,
                "overview_sorting_ids": [
                  20,
                  21,
                  22,
                  23,
                  24,
                  25,
                  26,
                  27,
                  28,
                  29
                ],
                "phone": "",
                "role_ids": [
                  6,
                  2,
                  1
                ],
                "roles": [
                  "Supportlings",
                  "Agent",
                  "Admin"
                ],
                "source": null,
                "street": "",
                "supportcontract": "none",
                "two_factor_preference_ids": [
                  34,
                  33
                ],
                "updated_at": "2025-02-18T15:38:48.399Z",
                "updated_by": "gualter@n8n.io",
                "updated_by_id": 6789,
                "verified": true,
                "vip": false,
                "web": "",
                "zip": ""
              },
              "updated_by_id": 6789,
              "accounted_time": 0
            }
          },
          "webhookUrl": "https://internal.users.n8n.cloud/webhook/d562586c-af6d-487f-9157-984daa4bf370",
          "executionMode": "production"
        }
      }
    ]
  },
  "versionId": "da403173-dc9e-4126-a6f1-7f3477ce7946",
  "triggerCount": 0,
  "tags": []
}